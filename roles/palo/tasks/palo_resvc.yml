- name: palo_resvc | Block WAN to ESXI
  when: services.palo.esx is defined
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: inbound-esx{{ item.key }}
    source_zone: ["{{ alias.wan | default('wan') }}"]
    source_ip: [any]
    destination_zone: "{{ lookup('template', 'dst_zone.j2') }}"
    destination_ip: ["{{ item.value.ip |  default(lan_net ~ item.key) }}"]
    application: [any]
    action: deny
    location: before
    existing_rule: tmp-block
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [Block]
  loop: "{{ services.palo.esx | dict2items }}"

- name: palo_resvc | Block WAN to DC
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: inbound-dc{{ item.key }}
    source_zone: ["{{ alias.wan | default('wan') }}"]
    source_ip: [any]
    destination_zone: "{{ lookup('template', 'dst_zone.j2') }}"
    destination_ip: ["{{ item.value.ip |  default(lan_net ~ item.key) }}"]
    application: [windc]
    action: deny
    location: before
    existing_rule: tmp-block
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [Block]
  loop: "{{ services.palo.dc | dict2items }}"

- name: palo_resvc | LAN to DC
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: lan-windc{{ item.key }}
    source_zone: ["{{ alias.lan | default('lan') }}"]
    source_ip: [any]
    destination_zone: "{{ lookup('template', 'dst_zone.j2') }}"
    destination_ip: ["{{ item.value.ip |  default(lan_net ~ item.key) }}"]
    application: [windc]
    action: allow
    location: before
    existing_rule: tmp-block
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [Service, local]
  loop: "{{ services.palo.dc | dict2items }}"

- name: palo_resvc | LAN to ESXI
  when: services.palo.esx is defined
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: lan-esx{{ item.key }}
    source_zone: ["{{ alias.lan | default('lan') }}"]
    source_ip: [any]
    destination_zone: "{{ lookup('template', 'dst_zone.j2') }}"
    destination_ip: ["{{ item.value.ip | default(lan_net ~ item.key) }}"]
    application: [vmware, ssl]
    action: allow
    location: before
    existing_rule: tmp-block
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [Service, local]
  loop: "{{ services.palo.esx | dict2items }}"

- name: palo_resvc | LAN to remote network
  when: remote_net is defined
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-remote
    source_zone: ["{{ alias.lan | default('lan') }}"]
    source_ip: [any]
    destination_zone: ["{{ alias.lan | default('wan') }}"]
    destination_ip: "{{ remote_net | list }}"
    application: [web-browsing, ssl, ssh, ms-rdp]
    action: allow
    location: before
    existing_rule: tmp-block
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [Service, local]

- name: palo_resvc | Remote logging network to lan
  when: wazuh is defined and remote_net is defined
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: inbound-remote
    source_zone: ["{{ alias.wan | default('wan') }}"]
    source_ip: "{{ remote_net | list }}"
    destination_zone: "{{ lookup('template', 'dst_zone.j2') }}"
    destination_ip: ["{{ wazuh }}"]
    application: [wazuh-agent, syslog]
    action: allow
    location: before
    existing_rule: tmp-block
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [Service, local]

- name: palo_resvc | Add service rules
  when: service.key not in fw_block
  ansible.builtin.include_tasks: palo_reservice.yml
  loop: "{{ services.palo | dict2items }}"
  loop_control:
    loop_var: service
