---
- name: content_update | Check latest content
  # Get an updated dynamic content list
  paloaltonetworks.panos.panos_op:
    provider: "{{ provider }}"
    cmd: request content upgrade check
  register: check

- name: content_update | Download latest content
  # Download the latest version
  paloaltonetworks.panos.panos_op:
    provider: "{{ provider }}"
    cmd: |
      <request><content><upgrade><download>
      <latest></latest>
      </download></upgrade></content></request>
    cmd_is_xml: true
  register: download

- name: content_update | Content update result
  ansible.builtin.debug:
    msg: "{{ download.stdout }}"

- name: content_update | Check content download result
  # wait for this job to finish
  paloaltonetworks.panos.panos_op:
    provider: "{{ provider }}"
    cmd: show jobs id {{ (download.stdout | from_json).response.result.job }}
  register: download_job
  until: download_job is not failed and (download_job.stdout | from_json).response.result.job.status == 'FIN'
  retries: 75
  delay: 5

- name: content_update | Install latest content
  # Content is downloaded and ready, now install it
  paloaltonetworks.panos.panos_op:
    provider: "{{ provider }}"
    cmd: |
      <request><content><upgrade><install>
      <version>latest</version>
      </install></upgrade></content></request>
    cmd_is_xml: true
  register: install

- name: content_update | Content update result
  ansible.builtin.debug:
    msg: "{{ install.stdout }}"

- name: content_update | Check content install result
  # again, wait for job to complete
  paloaltonetworks.panos.panos_op:
    provider: "{{ provider }}"
    cmd: show jobs id {{ (install.stdout | from_json).response.result.job }}
  register: install_job
  until: install_job is not failed and (install_job.stdout | from_json).response.result.job.status == 'FIN'
  retries: 75
  delay: 5

- name: content_update | Content update result
  ansible.builtin.debug:
    msg: "{{ install_job.stdout }}"
